// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ping.proto

package ping

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The request message containing the user's name.
type HelloRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HelloRequest) Reset()         { *m = HelloRequest{} }
func (m *HelloRequest) String() string { return proto.CompactTextString(m) }
func (*HelloRequest) ProtoMessage()    {}
func (*HelloRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6d51d96c3ad891f5, []int{0}
}

func (m *HelloRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HelloRequest.Unmarshal(m, b)
}
func (m *HelloRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HelloRequest.Marshal(b, m, deterministic)
}
func (m *HelloRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelloRequest.Merge(m, src)
}
func (m *HelloRequest) XXX_Size() int {
	return xxx_messageInfo_HelloRequest.Size(m)
}
func (m *HelloRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HelloRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HelloRequest proto.InternalMessageInfo

func (m *HelloRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// The response message containing the greetings
type HelloResponse struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HelloResponse) Reset()         { *m = HelloResponse{} }
func (m *HelloResponse) String() string { return proto.CompactTextString(m) }
func (*HelloResponse) ProtoMessage()    {}
func (*HelloResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6d51d96c3ad891f5, []int{1}
}

func (m *HelloResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HelloResponse.Unmarshal(m, b)
}
func (m *HelloResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HelloResponse.Marshal(b, m, deterministic)
}
func (m *HelloResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelloResponse.Merge(m, src)
}
func (m *HelloResponse) XXX_Size() int {
	return xxx_messageInfo_HelloResponse.Size(m)
}
func (m *HelloResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HelloResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HelloResponse proto.InternalMessageInfo

func (m *HelloResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// The request message containing the age
type AgeRequest struct {
	Age                  int32    `protobuf:"varint,1,opt,name=age,proto3" json:"age,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AgeRequest) Reset()         { *m = AgeRequest{} }
func (m *AgeRequest) String() string { return proto.CompactTextString(m) }
func (*AgeRequest) ProtoMessage()    {}
func (*AgeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6d51d96c3ad891f5, []int{2}
}

func (m *AgeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AgeRequest.Unmarshal(m, b)
}
func (m *AgeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AgeRequest.Marshal(b, m, deterministic)
}
func (m *AgeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AgeRequest.Merge(m, src)
}
func (m *AgeRequest) XXX_Size() int {
	return xxx_messageInfo_AgeRequest.Size(m)
}
func (m *AgeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AgeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AgeRequest proto.InternalMessageInfo

func (m *AgeRequest) GetAge() int32 {
	if m != nil {
		return m.Age
	}
	return 0
}

// The response message containing the health status
type HealthResponse struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HealthResponse) Reset()         { *m = HealthResponse{} }
func (m *HealthResponse) String() string { return proto.CompactTextString(m) }
func (*HealthResponse) ProtoMessage()    {}
func (*HealthResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6d51d96c3ad891f5, []int{3}
}

func (m *HealthResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthResponse.Unmarshal(m, b)
}
func (m *HealthResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthResponse.Marshal(b, m, deterministic)
}
func (m *HealthResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthResponse.Merge(m, src)
}
func (m *HealthResponse) XXX_Size() int {
	return xxx_messageInfo_HealthResponse.Size(m)
}
func (m *HealthResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HealthResponse proto.InternalMessageInfo

func (m *HealthResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func init() {
	proto.RegisterType((*HelloRequest)(nil), "ping.HelloRequest")
	proto.RegisterType((*HelloResponse)(nil), "ping.HelloResponse")
	proto.RegisterType((*AgeRequest)(nil), "ping.AgeRequest")
	proto.RegisterType((*HealthResponse)(nil), "ping.HealthResponse")
}

func init() { proto.RegisterFile("ping.proto", fileDescriptor_6d51d96c3ad891f5) }

var fileDescriptor_6d51d96c3ad891f5 = []byte{
	// 273 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0x4d, 0x4b, 0x33, 0x31,
	0x14, 0x85, 0x3b, 0xbc, 0xf3, 0x8e, 0x7a, 0xfd, 0xa0, 0x5c, 0xa5, 0x94, 0x29, 0x14, 0xc9, 0xaa,
	0x6e, 0xa6, 0xd0, 0xe2, 0xc2, 0x85, 0x8b, 0x22, 0x62, 0xdd, 0xc9, 0x08, 0xee, 0x53, 0xb9, 0xa6,
	0xc5, 0x4c, 0x12, 0x27, 0x19, 0xa4, 0xbf, 0xcc, 0xbf, 0x27, 0x93, 0x4c, 0xb4, 0xea, 0xee, 0x7e,
	0x3c, 0x39, 0x39, 0xf7, 0x00, 0x98, 0x8d, 0x12, 0x85, 0xa9, 0xb5, 0xd3, 0x98, 0xb6, 0x75, 0x3e,
	0x16, 0x5a, 0x0b, 0x49, 0x53, 0x3f, 0x5b, 0x35, 0x2f, 0xd3, 0xf7, 0x9a, 0x1b, 0x43, 0xb5, 0x0d,
	0x54, 0x3e, 0xfa, 0xbd, 0xa7, 0xca, 0xb8, 0x6d, 0x58, 0x32, 0x06, 0x47, 0x4b, 0x92, 0x52, 0x97,
	0xf4, 0xd6, 0x90, 0x75, 0x88, 0x90, 0x2a, 0x5e, 0xd1, 0x30, 0x39, 0x4f, 0x26, 0x07, 0xa5, 0xaf,
	0xd9, 0x05, 0x1c, 0x77, 0x8c, 0x35, 0x5a, 0x59, 0xc2, 0x21, 0xec, 0x55, 0x64, 0x2d, 0x17, 0x91,
	0x8b, 0x2d, 0x1b, 0x03, 0x2c, 0x04, 0x45, 0xb1, 0x3e, 0xfc, 0x8b, 0xcc, 0xff, 0xb2, 0x2d, 0xd9,
	0x04, 0x4e, 0x96, 0xc4, 0xa5, 0x5b, 0x7f, 0x69, 0x0d, 0x20, 0xb3, 0x8e, 0xbb, 0xc6, 0x76, 0x52,
	0x5d, 0x37, 0xfb, 0x48, 0x20, 0x7d, 0xd8, 0x28, 0x81, 0x97, 0xb0, 0xff, 0xc8, 0xb7, 0xde, 0x00,
	0x62, 0xe1, 0xaf, 0xdf, 0x75, 0x9c, 0x9f, 0xfe, 0x98, 0x05, 0x55, 0xd6, 0xc3, 0x2b, 0xc8, 0xee,
	0xc8, 0x2d, 0x04, 0x61, 0x3f, 0x00, 0xdf, 0xbe, 0xf2, 0x51, 0x11, 0x22, 0x29, 0x62, 0x24, 0xc5,
	0xbd, 0x72, 0xf3, 0xd9, 0x13, 0x97, 0x4d, 0xfb, 0xf4, 0x1a, 0x0e, 0x6f, 0xd6, 0xf4, 0xfc, 0x1a,
	0x9c, 0xe2, 0xe0, 0x0f, 0x7d, 0xdb, 0x06, 0x98, 0x9f, 0xc5, 0x8f, 0x77, 0xef, 0x61, 0xbd, 0x55,
	0xe6, 0xb9, 0xf9, 0x67, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb3, 0xac, 0x65, 0xeb, 0xaa, 0x01, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PingClient is the client API for Ping service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PingClient interface {
	// Sends a greeting
	SayHello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloResponse, error)
	// Gets the age
	GetAge(ctx context.Context, in *AgeRequest, opts ...grpc.CallOption) (*wrappers.Int32Value, error)
	// Checks the health of the service
	CheckHealth(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*HealthResponse, error)
}

type pingClient struct {
	cc *grpc.ClientConn
}

func NewPingClient(cc *grpc.ClientConn) PingClient {
	return &pingClient{cc}
}

func (c *pingClient) SayHello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloResponse, error) {
	out := new(HelloResponse)
	err := c.cc.Invoke(ctx, "/ping.Ping/SayHello", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pingClient) GetAge(ctx context.Context, in *AgeRequest, opts ...grpc.CallOption) (*wrappers.Int32Value, error) {
	out := new(wrappers.Int32Value)
	err := c.cc.Invoke(ctx, "/ping.Ping/GetAge", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pingClient) CheckHealth(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*HealthResponse, error) {
	out := new(HealthResponse)
	err := c.cc.Invoke(ctx, "/ping.Ping/CheckHealth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PingServer is the server API for Ping service.
type PingServer interface {
	// Sends a greeting
	SayHello(context.Context, *HelloRequest) (*HelloResponse, error)
	// Gets the age
	GetAge(context.Context, *AgeRequest) (*wrappers.Int32Value, error)
	// Checks the health of the service
	CheckHealth(context.Context, *empty.Empty) (*HealthResponse, error)
}

// UnimplementedPingServer can be embedded to have forward compatible implementations.
type UnimplementedPingServer struct {
}

func (*UnimplementedPingServer) SayHello(ctx context.Context, req *HelloRequest) (*HelloResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SayHello not implemented")
}
func (*UnimplementedPingServer) GetAge(ctx context.Context, req *AgeRequest) (*wrappers.Int32Value, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAge not implemented")
}
func (*UnimplementedPingServer) CheckHealth(ctx context.Context, req *empty.Empty) (*HealthResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckHealth not implemented")
}

func RegisterPingServer(s *grpc.Server, srv PingServer) {
	s.RegisterService(&_Ping_serviceDesc, srv)
}

func _Ping_SayHello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HelloRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PingServer).SayHello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ping.Ping/SayHello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PingServer).SayHello(ctx, req.(*HelloRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ping_GetAge_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AgeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PingServer).GetAge(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ping.Ping/GetAge",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PingServer).GetAge(ctx, req.(*AgeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ping_CheckHealth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PingServer).CheckHealth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ping.Ping/CheckHealth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PingServer).CheckHealth(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Ping_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ping.Ping",
	HandlerType: (*PingServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SayHello",
			Handler:    _Ping_SayHello_Handler,
		},
		{
			MethodName: "GetAge",
			Handler:    _Ping_GetAge_Handler,
		},
		{
			MethodName: "CheckHealth",
			Handler:    _Ping_CheckHealth_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ping.proto",
}
